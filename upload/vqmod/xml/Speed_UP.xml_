<?xml version="1.0" encoding="UTF-8"?>
<modification>
    <name>Speed Up</name>
    <version>2.x</version>
    <author>Bhavik Hirani</author>
    <link>http://mailto:bhavhirani007@gmail.com</link>
    <file path="system/framework.php">
        <operation error="skip">
            <search position="replace"><![CDATA[$response->output();]]></search>
            <add position="replace"><![CDATA[
                $response->output($registry);
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="before"><![CDATA[$response = new Response();]]></search>
            <add position="before"><![CDATA[
                global $response;
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="before"><![CDATA[$registry = new Registry();]]></search>
            <add position="before"><![CDATA[
                global $registry;
            ]]></add>
        </operation>
    </file>
    <file path="system/library/response.php">
        <operation error="skip">
            <search position="replace"><![CDATA[public function output() {]]></search>
            <add position="replace"><![CDATA[
                public function output($registry) {
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after"><![CDATA[if ($this->output) {]]></search>
            <add position="after"><![CDATA[
                $this->config = $registry->get('config');
                $this->speedup = $registry->get('speedup');
                if(!defined('HTTP_CATALOG')){
                    if($this->config->get('module_speedup_status') && $this->config->get('module_speedup_image_dimensions')){
                        $img = array();
                        
                        $imgdir = dirname(DIR_IMAGE).'/';
                        preg_match_all('/<img[^>]+>/i', $this->output, $result);
                        $doc = new DOMDocument();
                        @$doc->loadHTML($this->output);
                        $tags = $doc->getElementsByTagName('img');
                        $attributes = array();
                        foreach ($tags as $tag) {
                           $h = $doc->saveHtml($tag);
                           if($tag->getAttribute('data-original')){
                               $src = $tag->getAttribute('data-original');
                           }else if($tag->getAttribute('data-src')){
                               $src = $tag->getAttribute('data-src');
                           }else{
                               $src = $tag->getAttribute('src');
                           }
                           $attributes[$h] = array('src' => $src,'width' =>$tag->getAttribute('width'),'height' => $tag->getAttribute('height'));
                        }
                        foreach ($attributes as $k => $info){
                            if (!empty($info['src']) && empty($info['width']) && empty($info['height'])){
                               $imgfile = str_replace(array(HTTP_SERVER,HTTPS_SERVER,'"'),array($imgdir,$imgdir,''),$info['src']);
                               if (is_file($imgfile) && $image_info = getImageSize($imgfile)){
                                   $k = trim(trim($k, '/>'),'>');
                                   $this->output = str_replace($k,($k.' '.$image_info[3]), $this->output);
                               }
                            }
                        }
                    }
                    if($this->config->get('module_speedup_status') && $this->config->get('module_speedup_image_lazyload')){
                        if(!isset($_SERVER['HTTP_X_REQUESTED_WITH']) || strtolower(@$_SERVER['HTTP_X_REQUESTED_WITH']) != 'xmlhttprequest'){
                            $this->output = str_replace('<img src="','<img i src="'.HTTP_SERVER.'image/1.gif" data-original="',$this->output);
                        }
                    }
                    if($this->config->get('module_speedup_status') && $this->config->get('module_speedup_db_cache')){
                        $GLOBALS['instance']->saveCacheToFile();
                    }
                }
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[$output = $this->level ? $this->compress($this->output, $this->level) : $this->output;]]></search>
            <add position="replace"><![CDATA[
                $output = $this->level ? $this->compress($this->minify($this->output), $this->level) : $this->minify($this->output);
            ]]></add>
        </operation> 
        <operation error="skip">
            <search position="before"><![CDATA[public function getOutput()]]></search>
            <add position="before"><![CDATA[
                public function minify($output = ''){
                    if(!$this->speedup){
                        $this->config = $GLOBALS['registry']->get('config');
                        $this->speedup = $GLOBALS['registry']->get('speedup');
                    }
                    if($this->speedup && $this->config->get('module_speedup_minify_html') && $this->config->get('module_speedup_status'))
                        return $this->speedup->minify_html($output);
                    return $output;
                }
                public function spGetOutput($output = ''){
                    return $this->output;
                }
            ]]></add>
        </operation>
    </file>
    <file name="catalog/view/theme/*/template/common/header.twig">
        
        <operation error="skip">
            <search position="replace"><![CDATA[<link href="{{ link.href }}" rel="{{ link.rel }}" />]]></search>
            <add position="replace"><![CDATA[
                {% if speedup_status and speedup_defer %}
                <link href="{{ link.href }}" rel="{{ link.rel }}" defer="defer" />
                {% else %}
                <link href="{{ link.href }}" rel="{{ link.rel }}" />
                {% endif %}
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[<script src="{{ script }}" type="text/javascript"></script>]]></search>
            <add position="replace"><![CDATA[
                {% if speedup_status and speedup_defer %}
                <script src="{{ script }}" type="text/javascript" defer="defer"></script>
                {% else %}
                <script src="{{ script }}" type="text/javascript"></script>
                {% endif %}
            ]]></add>
        </operation>
    </file>
    <file name="catalog/controller/common/header.php">
        <operation error="skip">
            <search position="replace"><![CDATA[$data['scripts'] = $this->document->getScripts('header');]]></search>
            <add position="replace"><![CDATA[
                ini_set('allow_url_fopen',1);
                if($this->config->get('module_speedup_image_lazyload')){
                    $this->document->addScript('catalog/view/javascript/speedUP.lazyload.js');
                }
                $speedup = new speedup($this->registry); 
                $this->registry->set('speedup', $speedup);
                if($this->config->get('module_speedup_status') && $this->config->get('module_speedup_minify_css')){
                    $data['styles'] = $this->speedup->ganratefile('css');
                }else{
                    $data['styles'] = $this->document->getStyles();
                }
                if($this->config->get('module_speedup_status') && $this->config->get('module_speedup_minify_js')){
                    $data['scripts'] = $this->speedup->ganratefile('js');
                }else{
                    $data['scripts'] = $this->document->getScripts('header');
                }
                $data['speedup_status'] = $this->config->get('module_speedup_status');
                $data['speedup_defer'] = $this->config->get('module_speedup_defer');
            ]]></add>
        </operation>
       
    </file>
    <file name="catalog/controller/common/menu.php">
        <operation error="skip">
            <search position="after"><![CDATA[$data['categories'] = array();]]></search>
            <add position="after"><![CDATA[
                $data['categories'] = $this->cache->get('header.menu.'.(int)$this->config->get('config_language_id').'.'.(int)$this->config->get('config_store_id').'.'.$this->config->get('config_customer_group_id'));
                if(!$data['categories']){
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="before"><![CDATA[return $this->load->view('common/menu', $data);]]></search>
            <add position="before"><![CDATA[
                $this->cache->set('header.menu.'.(int)$this->config->get('config_language_id').'.'.(int)$this->config->get('config_store_id').'.'.$this->config->get('config_customer_group_id'), $data['categories']);
                }
            ]]></add>
        </operation>
    </file>
  
    <file name="system/library/log.php">
        <operation error="skip">
            <search position="after" offset="0"><![CDATA[private $handle;]]></search>
            <add position="after"><![CDATA[
                private $config;
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after" offset="0"><![CDATA[__construct]]></search>
            <add position="after"><![CDATA[
                $config = new Config();
                //$this->config = $GLOBALS['registry']->get('config');
                if($config->get('config_error_log'))
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after" offset="0"><![CDATA[function write]]></search>
            <add position="after"><![CDATA[
                $config = new Config();
                if($config->get('config_error_log'))
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after" offset="0"><![CDATA[__destruct]]></search>
            <add position="after"><![CDATA[
                if($this->handle)
            ]]></add>
        </operation>
    </file>
    
    <file path="catalog/view/theme/*/template/common/footer.twig">
        <operation error="skip">
            <search position="before"><![CDATA[</body>]]></search>
            <add position="before"><![CDATA[<script type="text/javascript">$(document).ready(function(){$('#cart').load('index.php?route=common/cart/info');if(typeof $(document).lazyload !== 'undefined'){$("[data-original]").lazyload({threshold: 10,placeholder:"{{ HTTP_SERVER }}image/12.gif"});}});</script>]]></add>
        </operation>
    </file>

    <file path="catalog/controller/startup/seo_url.php">
        <operation error="skip">
            <search position="before"><![CDATA[public function index() {]]></search>
            <add position="before"><![CDATA[
                public $cache_data = array();
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after"><![CDATA[public function index() {]]></search>
            <add position="after"><![CDATA[
                if($this->config->get('module_speedup_status') && $this->config->get('entry_url_alias_cache')){
                    $q = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias");
                    if($q->num_rows)
                    foreach ($q->rows as $v) {
                        $this->cache_data[$v['query']] = $v;
                    }
                }
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");]]></search>
            <add position="replace"><![CDATA[
                if($this->cache_data){
                    $query = (object)array('num_rows' => 0);
                    $check = $key.'='.(int)$value;
                    if(isset($this->cache_data[$check])){
                        $query = (object)array(
                            'num_rows' => 1,'row' => $this->cache_data[$check],'rows' => array($this->cache_data[$check])
                        );
                    }
                }else{
                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");
                }
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'category_id=" . (int)$category . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");]]></search>
            <add position="replace"><![CDATA[
                if($this->cache_data){
                    $query = (object)array('num_rows' => 0);
                    $check = "category_id=".(int)$category;
                    if(isset($this->cache_data[$check])){
                        $query = (object)array(
                            'num_rows' => 1,'row' => $this->cache_data[$check],'rows' => array($this->cache_data[$check])
                        );
                    }
                }else{
                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = 'category_id=" . (int)$category . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");
                }
            ]]></add>
        </operation>
    </file>
    <file name="admin/controller/common/filemanager.php">
        <operation error="skip">
            <search position="replace"><![CDATA[$json['success'] = $this->language->get('text_uploaded');]]></search>
            <add position="replace"><![CDATA[
            if (isset($percentageSaving)) {
                $json['success'] = $this->language->get('image_crusher_popup_success') . $percentageSaving;
            } else {
                $json['success'] = $this->language->get('text_uploaded'); 
            }
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="replace"><![CDATA[move_uploaded_file($file['tmp_name'], $directory . '/' . $filename);]]></search>
            <add position="replace"><![CDATA[
            $originalFileSize = filesize($file['tmp_name']);
            move_uploaded_file($file['tmp_name'], $directory . '/' . $filename);
            if ($this->config->get('module_speedup_image_optimise_on') === 'on'){
                $newpic = $directory . '/' . $filename;
                $compressedImage = '../image/catalog/'. $filename;
                $level = $this->config->get('module_speedup_compression_level');                                
                if ($file['type'] === 'image/jpeg')  { 
                    $image2 = imagecreatefromjpeg($newpic);
                    imagejpeg($image2, $compressedImage, $this->getCompressionLevel($level));
                } elseif ($file['type'] === 'image/png') {
                    $this->compressPng($newpic, $compressedImage, $this->getCompressionLevelForPng($level)); 
                }
                $newFileSize = filesize($compressedImage);
                $percentageSaving = $this->compressImg($originalFileSize, $newFileSize, $level);
            }
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="before"><![CDATA[public function upload() {]]></search>
            <add position="before"><![CDATA[
            public function compressImg($originalImage, $newImageName, $quality) {
                $info = @getimagesize($originalImage);
                if($info === false) return false;
                switch ($info['mime']){
                    case 'image/jpeg':
                        $img = imagecreatefromjpeg($originalImage); 
                        $image = imagejpeg($img, $newImageName, $quality);
                    break;
                    case 'image/png':
                        $image = $this->compressPng($originalImage, $newImageName, $quality); 
                    break;
                }
                return (isset($image) ? true : false);
            }
            public function compressPng($originalImage, $newImageName, $quality) {
                $imageSize = getimagesize($originalImage);
                $imageWidth = $imageSize[0];
                $imageHeight = $imageSize[1];
                $sourceImage = imagecreatefrompng($originalImage);
                $destination = imagecreatetruecolor($imageWidth, $imageHeight);
                $palette = (imagecolortransparent($sourceImage)<0);
                $pngQuality = 9;
                if (!$palette || (ord(file_get_contents ($originalImage, false, null, 25, 1)) & 4)) {
                    if(($transparentColour = imagecolorstotal($sourceImage)) && $transparentColour<=256)
                        imagetruecolortopalette($destination, false, $transparentColour);
                        imagealphablending($destination, false);
                        $alpha = imagecolorallocatealpha($destination, 0, 0, 0, 127);
                        imagefill($destination, 0, 0, $alpha);
                        imagesavealpha($destination, true);
                }
                imagecopyresampled($destination, $sourceImage, 0, 0, 0, 0, $imageWidth, $imageHeight, $imageSize[0], $imageSize[1]);
                if ((ord(file_get_contents ($originalImage, false, null, 25, 1)) & 4)) {
                    $dx = min(max(floor($imageWidth/50), 1), 10);
                    $dy = min(max(floor($imageHeight/50), 1), 10);

                    $palette = true;
                    for($x = 0; $x < $imageWidth; $x = $x + $dx) {
                        for($y = 0; $y < $imageHeight; $y = $y + $dy) {
                            $col = imagecolorsforindex($destination, imagecolorat($destination,$x,$y));
                            if ($col['alpha'] > 13) {
                                $palette = false;
                                break 2;
                            }
                        }
                    }
                }
                if ($palette) {
                    imagetruecolortopalette($destination, false, 256);
                    $pngQuality = $this->getCompressionLevelForPng($quality);
                }
                return imagepng($destination, $newImageName, $pngQuality, PNG_ALL_FILTERS);
            }
            public function getCompressionLevel($qualitySetting) {
                $compressionLevel = intval($qualitySetting);
                $quality_array = array(1=>96,2=>94,3=>88,4=>82,5=>76,6=>70,7=>64,8=>58,9=>52,10=>46);
                return (isset($quality_array[$compressionLevel]) ? $quality_array[$compressionLevel] : 70);
            }
            public function getCompressionLevelForPng($qualitySetting){
                $compressionLevel = intval($qualitySetting);
                $quality_array = array(1=>8,2=>8,3=>7,4=>7,5=>6,6=>5,7=>4,8=>4,9=>3,10=>2);
                return (isset($quality_array[$compressionLevel]) ? $quality_array[$compressionLevel] : 3);
            }
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after"><![CDATA[public function upload() {]]></search>
            <add position="after"><![CDATA[
                $this->load->language('extension/module/speedup');
            ]]></add>
        </operation>
    </file>
    <file name="admin/controller/setting/setting.php">
        <operation error="skip">
            <search position="replace"><![CDATA[$data['config_file_max_size'] = 300000;]]></search>
            <add position="replace"><![CDATA[
                $data['config_file_max_size'] = 20000000;
            ]]></add>
        </operation>
    </file>
    <file path="system/library/db.php">
        <operation error="skip">
            <search position="after"><![CDATA[$this->adaptor = new $class($hostname, $username, $password, $database, $port);]]></search>
            <add position="after"><![CDATA[
            $query = $this->adaptor->query("SELECT `key`,value FROM " . DB_PREFIX . "setting WHERE `code` = 'speedup'")->rows;
            if (!empty($query)) {
                foreach ($query as $key => $value) {
                    if($value['key'] == 'speedup_status' && $value['value'] == 1){
                        $query2 = $this->adaptor->query("SELECT value FROM " . DB_PREFIX . "setting WHERE `key` = 'speedup_timezone'")->row;
                        $query3 = $this->adaptor->query("SELECT value FROM " . DB_PREFIX . "setting WHERE `key` = 'speedup_database_time_zone'")->row;
                        $timezone = $query2['value'];
                        date_default_timezone_set($timezone);
                        $databasetimezone = $query3['value'];                
                        $this->adaptor->query("SET time_zone='" . $databasetimezone . "'");
                    }
                }
            }            
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="before"><![CDATA[class DB {]]></search>
            <add position="before" offset="0"><![CDATA[
                require_once(DIR_SYSTEM . 'library/db_cache.php');
            ]]></add>
        </operation>
        <operation error="skip">
            <search position="after"><![CDATA[public function query($sql) {]]></search>
            <add position="after"><![CDATA[
                return $GLOBALS['instance']->processDbQuery($this, $sql);
            }
            public function queryNonCache($sql) {
           ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/error/not_found.php">
        <operation error="skip">
            <search position="after"><![CDATA[public function index() {]]></search>
            <add position="after"><![CDATA[
            if($this->config->get('module_speedup_notfound_page') && $this->config->get('module_speedup_status')){
                $url = $this->request->server['REDIRECT_URL'];
                $ex = strtolower(pathinfo($url, PATHINFO_EXTENSION));
                 if(in_array($ex,array('jpg','png','jpeg','gif'))){
                    echo file_get_contents(DIR_IMAGE."/1.gif");
                    header("Content-type: image/gif");
                    die;
                }
            }
            ]]></add>
        </operation>
    </file>
   
</modification>